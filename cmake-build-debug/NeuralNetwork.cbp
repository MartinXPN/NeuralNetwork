<?xml version="1.0" encoding="UTF-8"?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6"/>
	<Project>
		<Option title="NeuralNetwork"/>
		<Option makefile_is_custom="1"/>
		<Option compiler="gcc"/>
		<Option virtualFolders="CMake Files\;"/>
		<Build>
			<Target title="all">
				<Option working_dir="/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
					<CompileFile command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="edit_cache">
				<Option working_dir="/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
					<CompileFile command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="rebuild_cache">
				<Option working_dir="/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug"/>
				<Option type="4"/>
				<MakeCommands>
					<Build command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
					<CompileFile command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="NeuralNetwork">
				<Option output="/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/NeuralNetwork" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
					<Add directory="/usr/include/c++/5"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/5"/>
					<Add directory="/usr/include/c++/5/backward"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 NeuralNetwork"/>
					<CompileFile command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
			<Target title="NeuralNetwork/fast">
				<Option output="/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/NeuralNetwork" prefix_auto="0" extension_auto="0"/>
				<Option working_dir="/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug"/>
				<Option object_output="./"/>
				<Option type="1"/>
				<Option compiler="gcc"/>
				<Compiler>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include"/>
					<Add directory="/usr/local/include"/>
					<Add directory="/usr/lib/gcc/x86_64-linux-gnu/5/include-fixed"/>
					<Add directory="/usr/include/x86_64-linux-gnu"/>
					<Add directory="/usr/include"/>
					<Add directory="/usr/include/c++/5"/>
					<Add directory="/usr/include/x86_64-linux-gnu/c++/5"/>
					<Add directory="/usr/include/c++/5/backward"/>
				</Compiler>
				<MakeCommands>
					<Build command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 NeuralNetwork/fast"/>
					<CompileFile command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
					<Clean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
					<DistClean command="/usr/bin/make -j8 -f &quot;/home/ubuntu/Desktop/Projects/NeuralNetwork/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
				</MakeCommands>
			</Target>
		</Build>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Activations/BaseActivation/BaseActivationFunction.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Activations/SimpleActivations/ELU.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Activations/SimpleActivations/Identitiy.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Activations/SimpleActivations/ReLU.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Activations/SimpleActivations/Sigmoid.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Activations/SimpleActivations/Tanh.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Edges/BaseEdges/BaseEdge.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Edges/BaseEdges/BaseEdge.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Edges/SimpleEdges/SharedEdge.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Edges/SimpleEdges/SharedEdge.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseHiddenLayer.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseHiddenLayer.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseInputLayer.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseInputLayer.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseLayer.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseLayer.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseOutputLayer.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/BaseLayers/BaseOutputLayer.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/SimpleLayers/Convolution.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/SimpleLayers/Convolution.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/SimpleLayers/FullyConnected.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Layers/SimpleLayers/FullyConnected.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/LossFunctions/BaseLoss/BaseLossFunction.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/LossFunctions/SimpleLossFunctions/CrossEntropyCost.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/LossFunctions/SimpleLossFunctions/MeanSquaredError.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Network/BaseNeuralNetwork.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Network/BaseNeuralNetwork.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/BaseNeurons/BaseInputNeuron.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/BaseNeurons/BaseInputNeuron.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/BaseNeurons/BaseNeuron.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/BaseNeurons/BaseNeuron.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/BaseNeurons/BaseOutputNeuron.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/BaseNeurons/BaseOutputNeuron.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/SimpleNeurons/Bias.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Neurons/SimpleNeurons/Bias.tpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Utilities/MathOperations.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/lib/Utilities/NeuronOperations.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/main.cpp">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/tests/TestLayers/ConvolutionTestConnections.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/tests/TestLayers/ConvolutionTestMNIST.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/tests/TestLayers/FullyConnectedTestDataMiningProject.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/tests/TestLayers/LayerTestMNIST.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/tests/TestLayers/LayerTestXOR.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/tests/TestNeurons/NeuronTest.h">
			<Option target="NeuralNetwork"/>
		</Unit>
		<Unit filename="/home/ubuntu/Desktop/Projects/NeuralNetwork/CMakeLists.txt">
			<Option virtualFolder="CMake Files\"/>
		</Unit>
	</Project>
</CodeBlocks_project_file>
